{"ast":null,"code":"var _jsxFileName = \"/home/triline/Desktop/auth0/firebase/src/progress&scroll/NgProgressBar.js\",\n  _s = $RefreshSig$();\nimport { Box } from '@mantine/core';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function NgProgressBar() {\n  _s();\n  const [completion, setCompletion] = useState(0);\n  useEffect(() => {\n    const updateScrollCompleation = () => {\n      const currentProgress = window.scrollY;\n      const scrollHeight = document.body.scrollHeight - window.innerHeight;\n      if (scrollHeight) {\n        setCompletion(Number(currentProgress / scrollHeight.toFixed(2) * 100));\n      }\n    };\n    window.addEventListener(\"scroll\", updateScrollCompleation);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      style: {\n        transform: `translateX(${completion - 100}%)`,\n        background: \"#37B24D\",\n        height: \"10px\",\n        position: \"sticky\",\n        top: \"0px\",\n        zIndex: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(NgProgressBar, \"PwkU/RztghSusaYwjxG0R7WrSy8=\");\n_c = NgProgressBar;\nvar _c;\n$RefreshReg$(_c, \"NgProgressBar\");","map":{"version":3,"names":["Box","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","NgProgressBar","_s","completion","setCompletion","updateScrollCompleation","currentProgress","window","scrollY","scrollHeight","document","body","innerHeight","Number","toFixed","addEventListener","children","style","transform","background","height","position","top","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/triline/Desktop/auth0/firebase/src/progress&scroll/NgProgressBar.js"],"sourcesContent":["import { Box } from '@mantine/core';\nimport { useEffect, useState } from 'react';\nexport default function NgProgressBar() {\n    const [completion, setCompletion] = useState(0)\n\n    useEffect(() => {\n        const updateScrollCompleation = () => {\n            const currentProgress = window.scrollY\n            const scrollHeight = document.body.scrollHeight - window.innerHeight;\n\n            if (scrollHeight) {\n                setCompletion(\n                    Number((currentProgress / scrollHeight.toFixed(2)) * 100)\n\n                )\n            }\n        }\n        window.addEventListener(\"scroll\", updateScrollCompleation)\n\n    }, [])\n    return (\n        <>\n            <Box style={{ transform: `translateX(${completion - 100}%)`, background: \"#37B24D\", height: \"10px\", position: \"sticky\", top: \"0px\", zIndex: 2 }}></Box>\n        </>\n    );\n}\n"],"mappings":";;AAAA,SAASA,GAAG,QAAQ,eAAe;AACnC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAC5C,eAAe,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACpC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAE/CD,SAAS,CAAC,MAAM;IACZ,MAAMU,uBAAuB,GAAGA,CAAA,KAAM;MAClC,MAAMC,eAAe,GAAGC,MAAM,CAACC,OAAO;MACtC,MAAMC,YAAY,GAAGC,QAAQ,CAACC,IAAI,CAACF,YAAY,GAAGF,MAAM,CAACK,WAAW;MAEpE,IAAIH,YAAY,EAAE;QACdL,aAAa,CACTS,MAAM,CAAEP,eAAe,GAAGG,YAAY,CAACK,OAAO,CAAC,CAAC,CAAC,GAAI,GAAG,CAE5D,CAAC;MACL;IACJ,CAAC;IACDP,MAAM,CAACQ,gBAAgB,CAAC,QAAQ,EAAEV,uBAAuB,CAAC;EAE9D,CAAC,EAAE,EAAE,CAAC;EACN,oBACIP,OAAA,CAAAE,SAAA;IAAAgB,QAAA,eACIlB,OAAA,CAACJ,GAAG;MAACuB,KAAK,EAAE;QAAEC,SAAS,EAAG,cAAaf,UAAU,GAAG,GAAI,IAAG;QAAEgB,UAAU,EAAE,SAAS;QAAEC,MAAM,EAAE,MAAM;QAAEC,QAAQ,EAAE,QAAQ;QAAEC,GAAG,EAAE,KAAK;QAAEC,MAAM,EAAE;MAAE;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC,gBACzJ,CAAC;AAEX;AAACzB,EAAA,CAvBuBD,aAAa;AAAA2B,EAAA,GAAb3B,aAAa;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}